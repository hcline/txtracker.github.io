// =============================================================================
// Border settings & helpers
// =============================================================================

@import "libs";
@import "color";

// Rounded corners
// -----------------------------------------------------------------------------

$border-radius: 3px !default;

// set a standard border radius for a given side
// usage: @include border-radius('top-left' 'bottom-right');
@mixin border-radius($sides: all) {
  @if $sides == all {
    border-radius: $border-radius;
  } @else {
    @each $side in $sides {
      border-#{$side}-radius: $border-radius;
    }
  }
}

// Border width & style
// -----------------------------------------------------------------------------

$border-w--default: 'thin' !default;
$border-style: solid !default;

$border-widths: (
  'thin'  : 1px,
  'thick' : 4px,
) !default;

// get function for border widths
@function border-w($w: $border-w--default) {
  @if (type-of($w) == "number") {
    @return #{$w};
  } @else {
    @return map-get($border-widths, $w);
  }
}

// make a standard border/hairline that works with the parent color theme
@mixin border($sides: all, $w: $border-w--default, $color: 'border', $style: $border-style, $important: false) {
  @if ($sides == all) {
    border: #{border-w($w)} #{$style} #{theme($color)}#{if($important == true, " !important", "")};
  } @else {
    @each $side in $sides {
      border-#{$side}: #{border-w($w)} #{$style} #{theme($color)}#{if($important == true, " !important", "")};
    }
  }

  // if no color is specified, set up border-color for each theme
  @if (type-of($color) != 'color') {
    @include color($color, 'border-color');
  }
}

.has-border {
  @include border('bottom');
}